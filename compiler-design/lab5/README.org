#+TITLE: Compiler Design
#+SUBTITLE: Lab 5
#+AUTHOR: Seshal Jain
#+OPTIONS: num:nil toc:nil ^:nil
#+DATE: September 06, 2021
#+LATEX_CLASS: assignment
#+LATEX_HEADER: \definecolor{solarized-bg}{HTML}{fdf6e3}
#+EXPORT_FILE_NAME: 191112436

* Environment Setup
Makefile
#+begin_src makefile :tangle Makefile
CC = gcc
LEX = flex

all: $(lexer)

$(l): $(lexer).c ; $(CC) -o $@ $<

$(l).c: $(lexer).l ; $(LEX) -o $@ $<

clean: ; rm -rf $(lexer).c $(lexer)
#+end_src
* Program to recognize state name from entered pincode
#+begin_src c :tangle l5p1.l
%{
  #include<stdio.h>
%}

%%

11[0-9]{4}    printf("\n%s is for Delhi", yytext);
1[23][0-9]{4}    printf("\n%s is for Haryana", yytext);
1[45][0-9]{4}    printf("\n%s is for Punjab", yytext);
16[0-9]{4}    printf("\n%s is for Chandigarh", yytext);
17[0-9]{4}    printf("\n%s is for Himachal Pradesh", yytext);
1[89][0-9]{4}    printf("\n%s is for Jammu & Kashmir", yytext);
2[0-8][0-9]{4}    printf("\n%s is for Uttar Pradesh, Uttarakhand",yytext);
3[0-4][0-9]{4}    printf("\n%s is for Rajasthan", yytext);
396210$    printf("\n%s is for Daman & Diu", yytext);
396[0-9]{3}    printf("\n%s is for Dadra & Nagar Haweli", yytext);
3[6-9][0-9]{4}    printf("\n%s is for Gujarat", yytext);
403[0-9]{3}    printf("\n%s is for Goa", yytext);
4[0-4][0-9]{4}    printf("\n%s is for Maharashtra", yytext);
4[5-8][0-9]{4}    printf("\n%s is for Madhya Pradesh", yytext);
49[0-9]{4}    printf("\n%s is for Chhattisgarh", yytext);
50[0-9]{4}    printf("\n%s is for Telangana", yytext);
5[1-3][0-9]{4}    printf("\n%s is for Andhra Pradesh", yytext);
5[6-9][0-9]{4}    printf("\n%s is for Karnataka", yytext);
605[0-9]{3}    printf("\n%s is for Puducherry", yytext);
6[0-6][0-9]{4}    printf("\n%s is for Tamil Nadu", yytext);
682[0-9]{3}    printf("\n%s is for Lakshadweep", yytext);
6[7-9][0-9]{4}    printf("\n%s is for Kerala", yytext);
737[0-9]{3}    printf("\n%s is for Sikkim", yytext);
744[0-9]{3}    printf("\n%s is for Andaman & Nicober Islands", yytext);
7[0-4][0-9]{4}    printf("\n%s is for West Bengal", yytext);
7[5-7][0-9]{4}    printf("\n%s is for Odisha", yytext);
78[0-9]{4}    printf("\n%s is for Assam", yytext);
79[0-2][0-9]{3}    printf("\n%s is for Arunachal Pradesh", yytext);
79[34][0-9]{3}    printf("\n%s is for Meghalaya", yytext);
795[0-9]{3}    printf("\n%s is for Manipur", yytext);
796[0-9]{3}    printf("\n%s is for Mizoram", yytext);
79[78][0-9]{3}    printf("\n%s is for Nagaland", yytext);
799[0-9]{3}    printf("\n%s is for Tripura", yytext);
8[0-5][0-9]{4}    printf("\n%s is for Bihar, Jharkhand", yytext);
9[0-9]{5}    printf("\n%s is for Army Postal Service", yytext);

^\s*$ return 0;

[^ \t\n]+  printf("\nInvalid Postal Code: %s", yytext);

\n printf("\n\nEnter Postal Code: ");

%%

int main() {
    printf("Enter Postal Code: ");
    yylex();
}

int yywrap(){}
#+end_src
** Output
#+begin_example
~/D/M/S/A/compiler-design/lab5 [main] λ export lexer=l5p1
~/D/M/S/A/compiler-design/lab5 [main] λ make
flex  -t l5p1.l > l5p1.c
gcc    -c -o l5p1.o l5p1.c
gcc   l5p1.o   -o l5p1
rm l5p1.c l5p1.o
~/D/M/S/A/compiler-design/lab5 [main] λ ./l5p1
Enter Postal Code: 452003

452003 is for Madhya Pradesh

Enter Postal Code: 123456

123456 is for Haryana

Enter Postal Code: 895623

Invalid Postal Code: 895623

Enter Postal Code: 90000

Invalid Postal Code: 90000
#+end_example
* Program to check for valid mobile number from country code
#+begin_src c :tangle l5p2.l
%{
    #include<stdio.h>
%}

%%

\+91\ ?[0-9]{10} printf("\n%s is for India", yytext);
\+1\ ?[0-9]{10} printf("\n%s is for USA", yytext);
\+971\ ?[0-9]{10} printf("\n%s is for UAE", yytext);
\+44\ ?[0-9]{10} printf("\n%s is for UK", yytext);
\+[0-9]{1,3}\ ?[0-9]{10} printf("\n%s is not recognized", yytext);

^\ *$ return 0;

[^ \t\n]+ printf("\nInvalid Mobile Number: %s", yytext);

\n printf("\n\nEnter Mobile Number: ");

%%

int main() {
    printf("Enter Mobile Number: ");
    yylex();
}

int yywrap(){}
#+end_src
** Output
#+begin_example
~/D/M/S/A/compiler-design/lab6 [main] λ export lexer=l6p2
~/D/M/S/A/compiler-design/lab5 [main] λ make
flex  -t l5p2.l > l5p2.c
gcc    -c -o l5p2.o l5p2.c
gcc   l5p2.o   -o l5p2
rm l5p2.c l5p2.o
~/D/M/S/A/compiler-design/lab5 [main] λ ./l5p2
Enter Mobile Number: +917389061102

+917389061102 is for India

Enter Mobile Number: +91 7389061102

+91 7389061102 is for India

Enter Mobile Number: +1 4652473617

+1 4652473617 is for USA

Enter Mobile Number: +751 5416741336

+751 5416741336 is not recognized

Enter Mobile Number: 123456

Invalid Mobile Number: 123456
#+end_example

* Program to check for valid email addresses
#+begin_src c :tangle l5p3.l
%{
    #include<stdio.h>
%}

%%

[a-zA-Z0-9._-]+@(((gmail|hotmail)\.com)|manit\.ac\.in) printf("\n%s is valid", yytext);

[^ \t\n]+ printf("\n%s is invalid", yytext);

\n printf("\n\nEnter email: ");

%%

int main() {
    printf("Enter email: ");
    yylex();
}

int yywrap(){}
#+end_src
** Output
#+begin_example
~/D/M/S/A/compiler-design/lab5 [main] λ export lexer=l5p3
~/D/M/S/A/compiler-design/lab5 [main] λ make
flex  -t l5p3.l > l5p3.c
gcc    -c -o l5p3.o l5p3.c
gcc   l5p3.o   -o l5p3
rm l5p3.o l5p3.c
~/D/M/S/A/compiler-design/lab5 [main] λ ./l5p3
Enter email: seshaljain11@gmail.com

seshaljain11@gmail.com is valid

Enter email: 191112436@manit.ac.in

191112436@manit.ac.in is valid

Enter email: johndoe@gamil.co

johndoe@gamil.co is invalid
#+end_example
* Program to count the number of words, characters, blank spaces and lines in the input file
#+begin_src c :tangle l5p4.l
%{
    #include<stdio.h>
    int chars = 0, words = 0, lines = 0, tabs = 0, spaces = 0;
%}

%%

\n        { lines++; chars++; }

[^ \t\n]+ { words++, chars += yyleng; }

([ ])     { spaces++; chars++; }

\t        { tabs++; chars+= yyleng; }

%%

int main() {
extern FILE *yyin;
    yyin = fopen("text.txt", "r");
    yylex();
    printf("Characters: %d\nWords: %d\nLines: %d\nSpaces: %d\nTabs: %d\n", chars, words, lines, spaces, tabs);
    return 0;
}

int yywrap(){}
#+end_src
** Output
#+begin_example
~/D/M/S/A/compiler-design/lab5 [main] λ export lexer=l5p4
~/D/M/S/A/compiler-design/lab5 [main] λ make
flex  -t l5p4.l > l5p4.c
gcc    -c -o l5p4.o l5p4.c
gcc   l5p4.o   -o l5p4
rm l5p4.c l5p4.o
~/D/M/S/A/compiler-design/lab5 [main] λ head -4 text.txt
Elit ut aliquam, purus sit amet luctus venenatis, lectus magna
fringilla urna, porttitor rhoncus dolor purus non enim praesent

elem	entum facilisis leo, vel fringilla est ullamcorper eget nulla
~/D/M/S/A/compiler-design/lab5 [main] λ ./l5p4
Characters: 2737
Words: 406
Lines: 45
Spaces: 357
Tabs: 10
#+end_example
* Program to count the frequency of the given word existing in the input file
Sample text file
#+begin_example
Elit ut aliquam, purus sit amet luctus venenatis, lectus magna
fringilla urna, porttitor rhoncus dolor purus non enim praesent

elem	entum facilisis leo, vel fringilla est ullamcorper eget nulla
facilisi etiam! Neque ornare aen	ean euismod elementum nisi, quis
eleifend quam. Nascetur ridiculus mus mauris vitae ultricies leo
integer malesuada	nunc vel risus commodo viverra maecenas accumsan,
lacus vel facilisis volutpat, es	t velit egestas! Tincidunt dui ut

ornare	 lectus sit amet est placerat in egestas erat imperdiet sed
euismod nisi porta lorem mollis aliquam ut porttitor leo a diam
sollicitudin! Laore	et non curabitur gravida arcu? Pellentesque
habitant morbi tristique senectus et netus et malesuada fames ac

turpis egestas maecenas pharetra?	 Dictum sit amet justo donec enim
diam, vulputate ut pharetra sit amet, aliquam id diam maecenas
ultr	icies mi eget mauris! Sed pulvinar proin gravida hendrerit
lectus a molestie lorem! Purus, in mollis nunc sed id semper risus!
Rhoncus, urna neque viverra justo, nec ultrices dui sapien eget mi.
Egestas congue quisque egestas diam	 in arcu cursus? Maecenas
volutpat blan	dit aliquam etiam erat velit, scelerisque in dictum
non, consectetur a erat nam. Odio aenean sed adipiscing diam donec
adipiscing tristique risus nec feugiat in fermentum posuere. Arcu
dui vivamus arcu felis, bibendum ut tristique et, egestas quis
ipsum suspendisse ultrices gravida dictum fusce ut. Lorem ipsum
dolor sit amet, consectetur adipiscing elit ut aliquam, purus sit
amet luctus venenatis, lectus magna! Dictum at tempor commodo,
ullamcorper a lacus vestibulum sed arcu non odio euismod lacinia at
quis risus sed vulputate odio ut? Risus nec feugiat in fermentum
posuere urna? Odio pellentesque diam volutpat commodo sed egestas
egestas fringilla phasellus faucibus scelerisque eleifend donec
pretium vulputate sapien nec sagittis aliquam malesuada bibendum
arcu vitae elementum curabitur. Urna nunc id cursus metus aliquam
eleifend mi in nulla posuere sollicitudin aliquam ultrices sagittis
orci, a scelerisque purus semper eget duis at tellus at urna
condimentum! Diam donec adipiscing tristique risus nec feugiat in
fermentum posuere urna nec tincidunt? Sagittis, nisl rhoncus mattis
rhoncus! Et ultrices neque ornare aenean euismod elementum nisi,
quis eleifend quam adipiscing vitae proin. Volutpat consequat,
mauris nunc congue nisi, vitae suscipit tellus mauris. Nulla
facilisi nullam vehicula ipsum a arcu. Sit amet nisl suscipit
adipiscing bibendum est ultricies integer quis auctor elit sed
vulputate mi sit amet mauris commodo quis imperdiet massa tincidunt
nunc pulvinar sapien et ligula ullamcorper. Semper auctor neque,
vitae tempus quam pellentesque nec nam aliquam sem et tortor?
#+end_example
#+begin_src c :tangle l5p5.l
%{
    #include<stdio.h>
    #include<string.h>
    char str[50];
    int freq = 0;
%}

%%

[^ \t\n]+ if(strcmp(yytext, str)==0) freq++;

\n |
. ;

%%

int main() {
    printf("Enter word: ");
    scanf("%s", str);
    extern FILE *yyin;
    yyin = fopen("text.txt", "r");
    yylex();
    printf("The frequency of '%s' in the file is %d\n", str, freq);
}
 
int yywrap() {return 1;}
#+end_src
** Output
#+begin_example
~/D/M/S/A/compiler-design/lab5 [main] λ export lexer=l5p5

~/D/M/S/A/compiler-design/lab5 [main] λ make
flex  -t l5p5.l > l5p5.c
gcc    -c -o l5p5.o l5p5.c
gcc   l5p5.o   -o l5p5
rm l5p5.c l5p5.o

~/D/M/S/A/compiler-design/lab5 [main] λ ./l5p5
Enter word: est
The frequency of 'est' in the file is 3
#+end_example
* Program to count the number of identifiers in a C source code file
Sample code file
#+begin_src c :tangle code.c
#include <stdio.h>

int main()
{
    int i = 0;

    for (int i = 0; i < 10; i++) {
        printf("%d", i);
    }

    return 0;
}
#+end_src

#+begin_src c :tangle l5p6.l
%{
    #include<stdio.h>
    #include<string.h>
    int cnt = 0;
%}

%%

(if|else|switch|case|default|for|do|while|char|double|float|int|long|short|signed|unsigned|break|continue|goto|return|auto|extern|register|static|const|volatile|enum|sizeof|struct|typedef|union|void) ;

(#define|#include|#undef|#ifdef|#ifndef|#if|#else|#elif|#endif|#error|#pragma).* ;

[a-zA-Z_][a-zA-Z0-9_]* printf("%s\t", yytext), cnt++;

([ \n])+ |
. ;

%%

int main() {
    extern FILE *yyin;
    yyin = fopen("code.c", "r");
    yylex();
    printf("\nThere are %d instances of identifiers.\n", cnt);
}
 
int yywrap(){}
#+end_src
** Output
#+begin_example
~/D/M/S/A/compiler-design/lab5 [main] λ export lexer=l5p6

~/D/M/S/A/compiler-design/lab5 [main] λ make
flex  -t l5p6.l > l5p6.c
gcc    -c -o l5p6.o l5p6.c
gcc   l5p6.o   -o l5p6
rm l5p6.o l5p6.c

~/D/M/S/A/compiler-design/lab5 [main] λ ./l5p6
main	i	i	i	i	printf	d	i
There are 8 instances of identifiers.
#+end_example

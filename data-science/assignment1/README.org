#+TITLE: Data Science
#+SUBTITLE: Assignment 1
#+AUTHOR: Seshal Jain
#+OPTIONS: num:nil toc:nil ^:nil
#+DATE: August 6, 2021
#+LATEX_CLASS: assignment
#+EXPORT_FILE_NAME: 191112436

* Pearson Correlation Coefficient
#+begin_src python :tangle pearson_corr_coeff.py
import math
import numpy as np

# Name: Seshal Jain
# DoB: 11/06/2001
# Mobile Number: 7389061102
# Format: DD MM YY YY 73 89 06 11

x = np.array([11, 6, 20, 1, 73, 89, 6, 11])
y = np.array([20, 9, 20, 1, 77, 48, 95, 89])

n = 8

num = n * np.sum(x * y) - np.sum(x) * np.sum(y)
denom = math.sqrt((n * np.sum(np.square(x)) - np.sum(x) ** 2) * (n
                  ,* np.sum(np.square(y)) - np.sum(y) ** 2))
print(num/denom)
#+end_src

** Output
#+begin_example
0.2653451664681723
#+end_example
* Correlation Coefficient
#+begin_src python :tangle corr_coeff.py
import math
import numpy as np

# Name: Seshal Jain
# DoB: 11/06/2001
# Mobile Number: 7389061102
# Format: DD MM YY YY 73 89 06 11

x = np.array([11, 6, 20, 1, 73, 89, 6, 11])
y = np.array([20, 9, 20, 1, 77, 48, 95, 89])

n = 8

mean_x = np.mean(x)
mean_y = np.mean(y)
num = np.sum(np.multiply(x - mean_x, y - mean_y))
denom = math.sqrt(np.multiply(np.sum(np.square(x - mean_x)),
                  np.sum(np.square(y - mean_y))))

print(num / denom)
#+end_src

** Output
#+begin_example
0.2653451664681723
#+end_example
